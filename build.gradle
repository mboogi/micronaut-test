plugins {
    id("org.jetbrains.kotlin.jvm") version "1.6.0"
    id("org.jetbrains.kotlin.kapt") version "1.6.0"
    id("com.github.johnrengelman.shadow") version "7.1.0"
    id("io.micronaut.application") version "3.0.0"
    id("org.jetbrains.kotlin.plugin.allopen") version "1.6.0"
}

version = "0.1"
group = "com.tests"

repositories {
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.tests.*")
    }
}

dependencies {
    kapt("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.kotlin:micronaut-kotlin-runtime")
    implementation("javax.annotation:javax.annotation-api")
    implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")
    testImplementation('org.testcontainers:junit-jupiter')
    testImplementation('org.testcontainers:postgresql')
    testImplementation('org.testcontainers:testcontainers')
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
    implementation('io.micronaut.data:micronaut-data-jdbc')
    implementation('io.micronaut.flyway:micronaut-flyway')
    implementation('io.micronaut.sql:micronaut-jdbc-hikari')
    compileOnly("jakarta.persistence:jakarta.persistence-api:2.2.3")
    runtimeOnly('org.postgresql:postgresql:42.3.0')

    runtimeOnly("com.fasterxml.jackson.module:jackson-module-kotlin")

}


application {
    mainClass.set("com.tests.ApplicationKt")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
}

tasks {
    compileKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }
}
